{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/Prikshit Systemm Backup/AllMergedProjectsssss/chat_application/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { socket } from '../socket';\nimport axios from 'axios';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const token = localStorage.getItem('token');\n  console.log(token, \"tokedddddn\");\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    // Fetch all other users\n    axios.get('http://localhost:5000/api/auth/users', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setUsers(res.data));\n  }, []);\n  useEffect(() => {\n    // Socket connection setup with token for authorization\n    socket.auth = {\n      token\n    };\n    socket.connect();\n    socket.on('receiveMessage', data => {\n      // Only display the message if it's for the selected user\n      if (data.sender === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id)) {\n        setChatLog(prev => [...prev, data]);\n      }\n    });\n    return () => {\n      socket.disconnect(); // Clean up when component unmounts\n      socket.off('receiveMessage'); // Remove event listener when unmounting\n    };\n  }, [selectedUser, token]); // Dependencies updated to reconnect on token/user changes\n\n  const sendMessage = () => {\n    if (message.trim() && selectedUser) {\n      socket.emit('sendMessage', {\n        message,\n        receiverId: selectedUser._id\n      }); // Match the receiver as 'receiverId'\n      setChatLog(prev => [...prev, {\n        sender: user._id,\n        message\n      }]); // Update sender chat log\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, \", user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a user to chat with:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          const selected = users.find(u => u._id === e.target.value);\n          setSelectedUser(selected);\n          setChatLog([]); // Reset chat for new user\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select User --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: u._id,\n          children: u.username\n        }, u._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Chatting with: \", selectedUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid black',\n          padding: 10,\n          height: 200,\n          overflowY: 'scroll'\n        },\n        children: chatLog.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: msg.sender === user._id ? 'right' : 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender === user._id ? 'You' : selectedUser.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), \" \", msg.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"pJQhEUf9dRtNEwbysMlAeS1v+FU=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","socket","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","message","setMessage","chatLog","setChatLog","users","setUsers","selectedUser","setSelectedUser","token","localStorage","getItem","console","log","user","JSON","parse","get","headers","Authorization","then","res","data","auth","connect","on","sender","_id","prev","disconnect","off","sendMessage","trim","emit","receiverId","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","selected","find","u","target","value","map","style","border","padding","height","overflowY","msg","i","textAlign","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/asd/Desktop/Prikshit Systemm Backup/AllMergedProjectsssss/chat_application/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { socket } from '../socket';\nimport axios from 'axios';\nimport './chat.css';\n\nconst Chat = () => {\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const token = localStorage.getItem('token');\n\n  console.log(token,\"tokedddddn\")\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  useEffect(() => {\n    // Fetch all other users\n    axios.get('http://localhost:5000/api/auth/users', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(res => setUsers(res.data));\n  }, []);\n\n  useEffect(() => {\n    // Socket connection setup with token for authorization\n    socket.auth = { token };\n    socket.connect();\n\n    socket.on('receiveMessage', (data) => {\n      // Only display the message if it's for the selected user\n      if (data.sender === selectedUser?._id) {\n        setChatLog(prev => [...prev, data]);\n      }\n    });\n\n    return () => {\n      socket.disconnect();  // Clean up when component unmounts\n      socket.off('receiveMessage');  // Remove event listener when unmounting\n    };\n  }, [selectedUser, token]);  // Dependencies updated to reconnect on token/user changes\n\n  const sendMessage = () => {\n    if (message.trim() && selectedUser) {\n      socket.emit('sendMessage', { message, receiverId: selectedUser._id });  // Match the receiver as 'receiverId'\n      setChatLog(prev => [...prev, { sender: user._id, message }]); // Update sender chat log\n      setMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <h3>Welcome, {user.username}</h3>\n\n      <div>\n        <label>Select a user to chat with:</label>\n        <select onChange={e => {\n          const selected = users.find(u => u._id === e.target.value);\n          setSelectedUser(selected);\n          setChatLog([]); // Reset chat for new user\n        }}>\n          <option value=\"\">-- Select User --</option>\n          {users.map(u => (\n            <option key={u._id} value={u._id}>{u.username}</option>\n          ))}\n        </select>\n      </div>\n\n      {selectedUser && (\n        <>\n          <h4>Chatting with: {selectedUser.username}</h4>\n          <div style={{ border: '1px solid black', padding: 10, height: 200, overflowY: 'scroll' }}>\n            {chatLog.map((msg, i) => (\n              <div key={i} style={{ textAlign: msg.sender === user._id ? 'right' : 'left' }}>\n                <strong>{msg.sender === user._id ? 'You' : selectedUser.username}:</strong> {msg.message}\n              </div>\n            ))}\n          </div>\n          <input \n            value={message} \n            onChange={e => setMessage(e.target.value)} \n            placeholder=\"Type a message...\" \n          />\n          <button onClick={sendMessage}>Send</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}