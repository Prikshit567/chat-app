{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/Prikshit Systemm Backup/AllMergedProjectsssss/chat_application/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { socket } from '../socket';\nimport axios from 'axios';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  console.log(token, \"tokedddddn\");\n  const user = JSON.parse(localStorage.getItem('user'));\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  useEffect(() => {\n    // Fetch all other users\n    axios.get('http://localhost:5000/api/auth/users', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setUsers(res.data));\n  }, []);\n  useEffect(() => {\n    // Socket connection setup with token for authorization\n    socket.auth = {\n      token\n    };\n    socket.connect();\n    socket.on('receiveMessage', data => {\n      // Only display the message if it's for the selected user\n      if (data.sender === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id)) {\n        setChatLog(prev => [...prev, data]);\n      }\n    });\n    return () => {\n      socket.disconnect(); // Clean up when component unmounts\n      socket.off('receiveMessage'); // Remove event listener when unmounting\n    };\n  }, [selectedUser, token]); // Dependencies updated to reconnect on token/user changes\n\n  const sendMessage = () => {\n    if (message.trim() && selectedUser) {\n      socket.emit('sendMessage', {\n        message,\n        receiverId: selectedUser._id\n      }); // Match the receiver as 'receiverId'\n      setChatLog(prev => [...prev, {\n        sender: user._id,\n        message\n      }]); // Update sender chat log\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Welcome, \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a user to chat with:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select-user\",\n        onChange: e => {\n          const selected = users.find(u => u._id === e.target.value);\n          setSelectedUser(selected);\n          setChatLog([]); // Reset chat for new user\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select User --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: u._id,\n          children: u.username\n        }, u._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Chatting with: \", selectedUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.sender === user._id ? 'sender' : 'receiver',\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender === user._id ? 'You' : selectedUser.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), \" \", msg.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"W32mEL9a4DRsWxBsOEFmKx3BCBc=\", true);\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","socket","axios","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","chatLog","setChatLog","users","setUsers","selectedUser","setSelectedUser","navigate","useNavigate","token","localStorage","getItem","console","log","user","JSON","parse","handleLogout","removeItem","get","headers","Authorization","then","res","data","auth","connect","on","sender","_id","prev","disconnect","off","sendMessage","trim","emit","receiverId","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","selected","find","u","target","value","map","msg","i","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/asd/Desktop/Prikshit Systemm Backup/AllMergedProjectsssss/chat_application/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { socket } from '../socket';\nimport axios from 'axios';\nimport './chat.css';\n\nconst Chat = () => {\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const navigate = useNavigate();\n\n  const token = localStorage.getItem('token');\n\n  console.log(token,\"tokedddddn\")\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n\n    navigate('/');\n  };\n\n  useEffect(() => {\n    // Fetch all other users\n    axios.get('http://localhost:5000/api/auth/users', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(res => setUsers(res.data));\n  }, []);\n\n  useEffect(() => {\n    // Socket connection setup with token for authorization\n    socket.auth = { token };\n    socket.connect();\n\n    socket.on('receiveMessage', (data) => {\n      // Only display the message if it's for the selected user\n      if (data.sender === selectedUser?._id) {\n        setChatLog(prev => [...prev, data]);\n      }\n    });\n\n    return () => {\n      socket.disconnect();  // Clean up when component unmounts\n      socket.off('receiveMessage');  // Remove event listener when unmounting\n    };\n  }, [selectedUser, token]);  // Dependencies updated to reconnect on token/user changes\n\n  const sendMessage = () => {\n    if (message.trim() && selectedUser) {\n      socket.emit('sendMessage', { message, receiverId: selectedUser._id });  // Match the receiver as 'receiverId'\n      setChatLog(prev => [...prev, { sender: user._id, message }]); // Update sender chat log\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"header\">\n        <h3>Welcome, {user.username}</h3>\n      </div>\n\n      <div className=\"chat-selection\">\n        <label>Select a user to chat with:</label>\n        <select\n          className=\"select-user\"\n          onChange={e => {\n            const selected = users.find(u => u._id === e.target.value);\n            setSelectedUser(selected);\n            setChatLog([]); // Reset chat for new user\n          }}\n        >\n          <option value=\"\">-- Select User --</option>\n          {users.map(u => (\n            <option key={u._id} value={u._id}>{u.username}</option>\n          ))}\n        </select>\n      </div>\n\n      {selectedUser && (\n        <div className=\"chat-window\">\n          <h4>Chatting with: {selectedUser.username}</h4>\n          <div className=\"chat-log\">\n            {chatLog.map((msg, i) => (\n              <div\n                key={i}\n                className={msg.sender === user._id ? 'sender' : 'receiver'}\n              >\n                <strong>{msg.sender === user._id ? 'You' : selectedUser.username}:</strong> {msg.message}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"chat-input-container\">\n            <input\n              className=\"chat-input\"\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n              placeholder=\"Type a message...\"\n            />\n            <button className=\"send-button\" onClick={sendMessage}>\n              Send\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}