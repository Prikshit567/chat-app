{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/Prikshit Systemm Backup/AllMergedProjectsssss/chat_application/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { socket } from '../socket';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    // Fetch all other users\n    axios.get('http://localhost:5000/api/auth/users', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setUsers(res.data));\n  }, []);\n  useEffect(() => {\n    socket.auth = {\n      token\n    };\n    socket.connect();\n    socket.on('receiveMessage', data => {\n      if (data.sender === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id)) {\n        setChatLog(prev => [...prev, data]);\n      }\n    });\n    return () => socket.disconnect();\n  }, [selectedUser]);\n  const sendMessage = () => {\n    if (message.trim() && selectedUser) {\n      socket.emit('sendMessage', {\n        to: selectedUser._id,\n        message\n      });\n      setChatLog(prev => [...prev, {\n        sender: user._id,\n        message\n      }]);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, \", user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a user to chat with:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          const selected = users.find(u => u._id === e.target.value);\n          setSelectedUser(selected);\n          setChatLog([]); // Reset chat for new user\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select User --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: u._id,\n          children: u.username\n        }, u._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Chatting with: \", selectedUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid black',\n          padding: 10,\n          height: 200,\n          overflowY: 'scroll'\n        },\n        children: chatLog.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: msg.sender === user._id ? 'right' : 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender === user._id ? 'You' : selectedUser.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), \" \", msg.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"pJQhEUf9dRtNEwbysMlAeS1v+FU=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","socket","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","message","setMessage","chatLog","setChatLog","users","setUsers","selectedUser","setSelectedUser","token","localStorage","getItem","user","JSON","parse","get","headers","Authorization","then","res","data","auth","connect","on","sender","_id","prev","disconnect","sendMessage","trim","emit","to","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","selected","find","u","target","value","map","style","border","padding","height","overflowY","msg","i","textAlign","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/asd/Desktop/Prikshit Systemm Backup/AllMergedProjectsssss/chat_application/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { socket } from '../socket';\nimport axios from 'axios';\n\nconst Chat = () => {\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  useEffect(() => {\n    // Fetch all other users\n    axios.get('http://localhost:5000/api/auth/users', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(res => setUsers(res.data));\n  }, []);\n\n  useEffect(() => {\n    socket.auth = { token };\n    socket.connect();\n\n    socket.on('receiveMessage', (data) => {\n      if (data.sender === selectedUser?._id) {\n        setChatLog(prev => [...prev, data]);\n      }\n    });\n\n    return () => socket.disconnect();\n  }, [selectedUser]);\n\n  const sendMessage = () => {\n    if (message.trim() && selectedUser) {\n      socket.emit('sendMessage', { to: selectedUser._id, message });\n      setChatLog(prev => [...prev, { sender: user._id, message }]);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <h3>Welcome, {user.username}</h3>\n\n      <div>\n        <label>Select a user to chat with:</label>\n        <select onChange={e => {\n          const selected = users.find(u => u._id === e.target.value);\n          setSelectedUser(selected);\n          setChatLog([]); // Reset chat for new user\n        }}>\n          <option value=\"\">-- Select User --</option>\n          {users.map(u => (\n            <option key={u._id} value={u._id}>{u.username}</option>\n          ))}\n        </select>\n      </div>\n\n      {selectedUser && (\n        <>\n          <h4>Chatting with: {selectedUser.username}</h4>\n          <div style={{ border: '1px solid black', padding: 10, height: 200, overflowY: 'scroll' }}>\n            {chatLog.map((msg, i) => (\n              <div key={i} style={{ textAlign: msg.sender === user._id ? 'right' : 'left' }}>\n                <strong>{msg.sender === user._id ? 'You' : selectedUser.username}:</strong> {msg.message}\n              </div>\n            ))}\n          </div>\n          <input value={message} onChange={e => setMessage(e.target.value)} placeholder=\"Type a message...\" />\n          <button onClick={sendMessage}>Send</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErDpB,SAAS,CAAC,MAAM;IACd;IACAG,KAAK,CAACqB,GAAG,CAAC,sCAAsC,EAAE;MAChDC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUR,KAAK;MAChC;IACF,CAAC,CAAC,CAACS,IAAI,CAACC,GAAG,IAAIb,QAAQ,CAACa,GAAG,CAACC,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN7B,SAAS,CAAC,MAAM;IACdE,MAAM,CAAC4B,IAAI,GAAG;MAAEZ;IAAM,CAAC;IACvBhB,MAAM,CAAC6B,OAAO,CAAC,CAAC;IAEhB7B,MAAM,CAAC8B,EAAE,CAAC,gBAAgB,EAAGH,IAAI,IAAK;MACpC,IAAIA,IAAI,CAACI,MAAM,MAAKjB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEkB,GAAG,GAAE;QACrCrB,UAAU,CAACsB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEN,IAAI,CAAC,CAAC;MACrC;IACF,CAAC,CAAC;IAEF,OAAO,MAAM3B,MAAM,CAACkC,UAAU,CAAC,CAAC;EAClC,CAAC,EAAE,CAACpB,YAAY,CAAC,CAAC;EAElB,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI3B,OAAO,CAAC4B,IAAI,CAAC,CAAC,IAAItB,YAAY,EAAE;MAClCd,MAAM,CAACqC,IAAI,CAAC,aAAa,EAAE;QAAEC,EAAE,EAAExB,YAAY,CAACkB,GAAG;QAAExB;MAAQ,CAAC,CAAC;MAC7DG,UAAU,CAACsB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEF,MAAM,EAAEZ,IAAI,CAACa,GAAG;QAAExB;MAAQ,CAAC,CAAC,CAAC;MAC5DC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAAoC,QAAA,GAAI,WAAS,EAACpB,IAAI,CAACqB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEjCzC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,EAAO;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CzC,OAAA;QAAQ0C,QAAQ,EAAEC,CAAC,IAAI;UACrB,MAAMC,QAAQ,GAAGnC,KAAK,CAACoC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjB,GAAG,KAAKc,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;UAC1DpC,eAAe,CAACgC,QAAQ,CAAC;UACzBpC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB,CAAE;QAAA4B,QAAA,gBACApC,OAAA;UAAQgD,KAAK,EAAC,EAAE;UAAAZ,QAAA,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1ChC,KAAK,CAACwC,GAAG,CAACH,CAAC,iBACV9C,OAAA;UAAoBgD,KAAK,EAAEF,CAAC,CAACjB,GAAI;UAAAO,QAAA,EAAEU,CAAC,CAACT;QAAQ,GAAhCS,CAAC,CAACjB,GAAG;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoC,CACvD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL9B,YAAY,iBACXX,OAAA,CAAAE,SAAA;MAAAkC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,GAAI,iBAAe,EAACzB,YAAY,CAAC0B,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/CzC,OAAA;QAAKkD,KAAK,EAAE;UAAEC,MAAM,EAAE,iBAAiB;UAAEC,OAAO,EAAE,EAAE;UAAEC,MAAM,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAlB,QAAA,EACtF7B,OAAO,CAAC0C,GAAG,CAAC,CAACM,GAAG,EAAEC,CAAC,kBAClBxD,OAAA;UAAakD,KAAK,EAAE;YAAEO,SAAS,EAAEF,GAAG,CAAC3B,MAAM,KAAKZ,IAAI,CAACa,GAAG,GAAG,OAAO,GAAG;UAAO,CAAE;UAAAO,QAAA,gBAC5EpC,OAAA;YAAAoC,QAAA,GAASmB,GAAG,CAAC3B,MAAM,KAAKZ,IAAI,CAACa,GAAG,GAAG,KAAK,GAAGlB,YAAY,CAAC0B,QAAQ,EAAC,GAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACc,GAAG,CAAClD,OAAO;QAAA,GADhFmD,CAAC;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNzC,OAAA;QAAOgD,KAAK,EAAE3C,OAAQ;QAACqC,QAAQ,EAAEC,CAAC,IAAIrC,UAAU,CAACqC,CAAC,CAACI,MAAM,CAACC,KAAK,CAAE;QAACU,WAAW,EAAC;MAAmB;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpGzC,OAAA;QAAQ2D,OAAO,EAAE3B,WAAY;QAAAI,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC3C,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CAzEID,IAAI;AAAAyD,EAAA,GAAJzD,IAAI;AA2EV,eAAeA,IAAI;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}